<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuStrip1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADcAUoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0jcQx+bJ+lKH28HOKYHUEjdzSleMnH+P415J3j2CcY5469s03
        AJ2jIpnJ+XafU+1PKggZ+U8c9c0gG9RgnAHOKeg4yAQBxzRncjBT170n8S4PA5JoAcpUfd464FIrdATk
        ZzmmMCMlm68eop3UYJPHHB4FIY4ZJzSE84Jxt5/GjJGQRtHYUDgjJwTTAAxxtAwCOT60cE55Pv6Un3eo
        5/lTuOHHTvzj8KkBrKpXpgd8etKTjPv2pCMjAP8AWlGGyCce9MAGHwTxn1pcZB65Hf0pDx/QelHIHJAG
        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
</value>
  </data>
</root>